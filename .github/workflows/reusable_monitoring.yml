#V1.0.0true$
name: 5 Deploy Prometheus Operator üîé

on:

  workflow_call:

  workflow_dispatch:
    inputs:
      oci:
        description: 'Deploy prometheus at OCI? ‚òÅÔ∏è'
        default: false
        required: true
        type: boolean
      aws:
        description: 'Deploy Prometheus at AWS? ‚òÅÔ∏è'
        default: false
        required: true
        type: boolean

jobs:

  Prometheus_deploy:

    runs-on: ubuntu-20.04
    timeout-minutes: 15
    environment: 'infra'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v1
        if: ${{ inputs.aws == true }}
        with:
          role-to-assume: arn:aws:iam::${{secrets.DEV_AWS_ACCOUNT_ID}}:role/github-role-skaffold-demo
          role-session-name: github-role-skaffold-demo
          aws-region: us-west-2
      - name: Configure Cluster
        run: |
          aws eks update-kubeconfig --name terraform-eks-demo --region us-west-2
      - name: Deploying prometheus
        run: |
          # Create the namespace and CRDs, and then wait for them to be available before creating the remaining resources
          kubectl apply --server-side -f monitoring_stack/setup
          until kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo ""; done
          kubectl apply -f monitoring_stack/
      - name: Testing installations with Prometheus
        run: | 
          kubectl get pods -n monitoring
          kubectl get svc -n monitoring
        shell: bash

      - name: Deploying Promtail 
        run: |
          #curl -fsS https://raw.githubusercontent.com/grafana/loki/master/tools/promtail.sh | sh -s 256193 ${{ secrets.LOKI_TOKEN }} logs-prod3.grafana.net default | kubectl apply --namespace=default -f  -
   
